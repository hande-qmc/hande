version: 2

variables:
  ubuntu-1804: &ubuntu-1804
    docker:
      - image: handeqmc/circleci_ubuntu-18.04
        name: tsubame
        user: merzbow 
    working_directory: ~/hande
  setup: &setup
    run:
      name: Set Python dependencies
      command: |
        if [[ "$PYTHON_VER" == "2" ]] ; then
            pipenv install --two
        else
            pipenv install --three
        fi
  report: &report
    run:
      name: Report
      command: |
        pipenv run python --version
  configure-cmake: &configure-cmake
    run:
      name: Configuring serial
      shell: /bin/bash
      command: |
        pipenv run python cmakeconfig.py \
                       --type=release \
                       --fc=gfortran \
                       --cc=gcc \
                       --lanczos="-L/opt/trlan/lib -ltrlan" \
                       --exe-name="hande.circle.serial.linux.cmake.x"
  configure-cmake-mpi: &configure-cmake-mpi
    run:
      name: Configuring MPI parallel
      shell: /bin/bash
      command: |
        pipenv run python cmakeconfig.py \
                       --type=release \
                       --fc=mpifort \
                       --cc=mpicc \
                       --mpi \
                       --mpi-with-scalapack \
                       --scalapack="-L/usr/lib/x86_64-linux-gnu -lscalapack-openmpi" \
                       --lanczos="-L/opt/trlan/lib -ltrlan" \
                       --exe-name="hande.circle.mpi.linux.cmake.x"
  configure-cmake-hybrid: &configure-cmake-hybrid
    run:
      name: Configuring MPI/OpenMP parallel
      shell: /bin/bash
      command: |
        pipenv run python cmakeconfig.py \
                       --type=release \
                       --fc=mpifort \
                       --cc=mpicc \
                       --mpi \
                       --omp \
                       --mpi-with-scalapack \
                       --scalapack="-L/usr/lib/x86_64-linux-gnu -lscalapack-openmpi" \
                       --lanczos="-L/opt/trlan/lib -ltrlan" \
                       --exe-name="hande.circle.hybrid.linux.cmake.x"
  configure-legacy: &configure-legacy
    run:
      name: Configuring with legacy toolset
      shell: /bin/bash
      command: |
        pipenv run python tools/mkconfig.py circleci.linux
  build-cmake: &build-cmake
    run:
      name: Building
      shell: /bin/bash
      command: |
        pipenv run cmake --build build -- VERBOSE=1 
  build-legacy: &build-legacy
    run:
      name: Building
      shell: /bin/bash
      command: |
        env VERBOSE=1 make
  tests: &tests
    run:
      name: Testing
      shell: /bin/bash
      command: |
        cd test_suite
        pipenv run python /opt/testcode/bin/testcode.py -c vquick -v
  tests-serial: &tests-serial
    run:
      name: Testing
      shell: /bin/bash
      command: |
        cd test_suite
        pipenv run python /opt/testcode/bin/testcode.py -c vquick_serial -v

jobs:
  cmake-py2:
    <<: *ubuntu-1804
    environment:
      - PYTHON_VER: "2"
    steps:
      - checkout
      - *setup
      - *report
      - *configure-cmake
      - *build-cmake
      - *tests-serial
  cmake-mpi-py2:
    <<: *ubuntu-1804
    environment:
      - PYTHON_VER: "2"
    steps:
      - checkout
      - *setup
      - *report
      - *configure-cmake-mpi
      - *build-cmake
      - *tests
  legacy-mpi-py2:
    <<: *ubuntu-1804
    environment:
      - PYTHON_VER: "2"
    steps:
      - checkout
      - *setup
      - *report
      - *configure-legacy
      - *build-legacy
      - *tests
  cmake-mpi-py3:
    <<: *ubuntu-1804
    environment:
      - PYTHON_VER: "3"
    steps:
      - checkout
      - *setup
      - *report
      - *configure-cmake-mpi
      - *build-cmake
      - *tests
  legacy-mpi-py3:
    <<: *ubuntu-1804
    environment:
      - PYTHON_VER: "3"
    steps:
      - checkout
      - *setup
      - *report
      - *configure-legacy
      - *build-legacy
      - *tests

workflows:
  version: 2
  build:
    jobs:
      - cmake-py2
      - cmake-mpi-py2
      - legacy-mpi-py2
      - cmake-mpi-py3
      - legacy-mpi-py3
