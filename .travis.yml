sudo: false
dist: trusty

language: python

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-8
      - gfortran-8
      - g++-8
      - uuid-dev

env:
  global:
    - DEPS=$HOME/Deps
    - LUA_ROOT=$DEPS/lua
    - OpenMPI_ROOT=$DEPS/openmpi
    - HDF5_ROOT=$DEPS/hdf5
    - LAPACK_ROOT=$DEPS/lapack
    - ScaLAPACK_ROOT=$DEPS/scalapack
    # Paths for UUID from packages
    - LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
    # Put custom built stack (dynamic) libraries on LD_LIBRARY_PATH
    - LD_LIBRARY_PATH=$HDF5_ROOT/lib:$OpenMPI_ROOT/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
    # Put custom OpenMPI on PATH
    - PATH=$OpenMPI_ROOT/bin${PATH:+:$PATH}
    # To help CMake find BLAS and LAPACK
    - MATH_ROOT=$LAPACK_ROOT

matrix:
  include:
    - os: linux
      python: '2.7'
      env: USE_CMAKE=false
    - os: linux
      python: '3.5'
      env: USE_CMAKE=false
    - os: linux
      python: '2.7'
      env:
        - USE_CMAKE=true
    - os: linux
      python: '3.5'
      env:
        - USE_CMAKE=true
    - os: linux
      python: '2.7'
      env:
        - USE_CMAKE=true
        - SERIAL=true
    - os: linux
      python: '3.5'
      env:
        - USE_CMAKE=true
        - SERIAL=true

before_install:
  # Dependencies are downloaded in $HOME/Downloads and installed in $HOME/Deps
  - mkdir -p $HOME/Downloads $DEPS

cache:
  pip: true
  directories:
    - $HOME/Deps/cmake/3.6.3
    - $HOME/Deps/lua
    - $HOME/Deps/openmpi
    - $HOME/Deps/hdf5
    - $HOME/Deps/scalapack
    - $HOME/Deps/trlan
    - $HOME/Deps/lapack

install:
  - git clone git://github.com/jsspencer/testcode.git "$HOME"/Deps/testcode &> /dev/null
  - ./.ci/cmake.sh
  - ./.ci/lua.sh
  - ./.ci/trlan.sh
  - ./.ci/lapack.sh
  - travis_wait 20 ./.ci/openmpi.sh
  - travis_wait 20 ./.ci/hdf5.sh
  - ./.ci/scalapack.sh
  - pip install -r requirements.txt

before_script:
  - >
    if [[ "$USE_CMAKE" = "true" && "$SERIAL" != "true" ]]; then
      ./cmakeconfig.py --type=release \
                       --fc=mpif90 \
                       --cc=mpicc \
                       --mpi \
                       --hdf5=$HDF5_ROOT \
                       --lua=$LUA_ROOT \
                       --mpi-with-scalapack \
                       --scalapack="-L$ScaLAPACK_ROOT/lib -lscalapack" \
                       --lanczos="-L$DEPS/trlan/lib -ltrlan" \
                       --exe-name="hande.travis.mpi.linux.cmake.x" \
                       --cmake-executable="$HOME/Deps/cmake/3.6.3/bin/cmake"
      # This is equivalent to
      # cmake -H. -Bbuild \
      #           -DENABLE_HDF5=ON \
      #           -DENABLE_UUID=ON \
      #           -DCMAKE_BUILD_TYPE=Release \
      #           -DCMAKE_Fortran_COMPILER=mpif90 \
      #           -DCMAKE_C_COMPILER=mpicc \
      #           -DENABLE_MPI=ON \
      #           -DHDF5_ROOT=$HDF5_ROOT \
      #           -DLUA_ROOT=$LUA_ROOT \
      #           -DENABLE_SCALAPACK=ON \
      #           -DSCALAPACK_LIBRARIES="-L$ScaLAPACK_ROOT/lib -lscalapack" \
      #           -DTRLan_LIBRARIES="-L$DEPS/trlan/lib -ltrlan" \
      #           -DHANDE_EXE_NAME="hande.travis.mpi.linux.cmake.x"
    elif [[ "$USE_CMAKE" = "true" && "$SERIAL" = "true" ]]; then
      ./cmakeconfig.py --type=release \
                       --fc=gfortran-8 \
                       --cc=gcc-8 \
                       --hdf5=$HDF5_ROOT \
                       --lua=$LUA_ROOT \
                       --backtrace \
                       --exe-name="hande.travis.serial.linux.cmake.x" \
                       --cmake-executable="$HOME/Deps/cmake/3.6.3/bin/cmake"
      # This is equivalent to
      # cmake -H. -Bbuild \
      #           -DCMAKE_BUILD_TYPE=Release \
      #           -DCMAKE_Fortran_COMPILER=gfortran \
      #           -DCMAKE_C_COMPILER=gcc \
      #           -DHDF5_ROOT=$HDF5_ROOT \
      #           -DLUA_ROOT=$LUA_ROOT \
      #           -DENABLE_HDF5=ON \
      #           -DENABLE_UUID=ON \
      #           -DENABLE_BACKTRACE="True" \
      #           -DHANDE_EXE_NAME="hande.travis.serial.linux.cmake.x"
    else
      tools/mkconfig.py travis.linux
    fi

script:
  - >
    if [[ "$USE_CMAKE" = "true" ]]; then
      cmake --build build -- VERBOSE=1
    else
      make
    fi
  # Only run a short subset of the tests
  - cd test_suite
  - >
    if [[ "$SERIAL" = "true" ]]; then
      $DEPS/testcode/bin/testcode.py -c vquick_serial -v
    else
      $DEPS/testcode/bin/testcode.py -c vquick -v
    fi

notifications:
  email:
    - hande-dev@imperial.ac.uk
